@model InternetDataMine.Models.LoadModel

@{
    ViewBag.Title = "ShowData";
    Layout = null;
    var QueryBarPath = Model.QueryBarPath;
    var QueryDataPath = Model.QueryDataPath;
    var PreLoadData = Model.PreLoadData;
    var PageSystemType = Model.SystemType;
    var UserMineCode = Model.UserMineCode;
    var UserAbility = Model.UserAbility;
    var SystemType = Model.SystemType;
    var PageType = Model.PageType;
    var ReportName = Model.ReportName;
    var PageTitle = Model.PageTitle;
    int TotalHeight = 500;
    if (Model.Height != null && Model.Height != "")
    {
        TotalHeight = int.Parse(Model.Height) - 90;
    }
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/easyui")
@Styles.Render("~/Content/icon")
<link rel="stylesheet" type="text/css" href="../Content/themes/metro-orange/easyui.css" title="orange">
<link rel="stylesheet" type="text/css" href="../Content/themes/metro-red/easyui.css" title="pink">
<link rel="stylesheet" type="text/css" href="../Content/themes/ui-cupertino/easyui.css" title="blue">
<link rel="stylesheet" type="text/css" href="../Content/themes/metro-gray/easyui.css" title="gray">
<link rel="stylesheet" type="text/css" href="../Content/themes/metro-green/easyui.css" title="green">
<script src="~/Scripts/CompanyInfo.js" type="text/javascript"></script>
@Scripts.Render("~/bundles/common")
@*<script src="~/bundles/supcan"></script>
<script src="~/bundles/jquery"></script>*@
@*<script type="text/javascript" src="../../binary/dynaload.js?20"> </script>*@

<body>
    <div id="myGrid" class="easyui-panel" data-options="fit:true">
        <div style="height:96%">
            <table id="dg" style="height:100%" class="easyui-datagrid">
            </table>
        </div>
        
    </div>
    <div id="toolbar">
        <input type="checkbox" id="StopReflesh"  onclick="ClickReflesh(this)"/><label for="StopReflesh">停止刷新</label>
        &nbsp;  &nbsp;  &nbsp;
        @if (@UserMineCode == "" || @UserMineCode == null)
        {
            <span>煤矿名称:</span>
    <select class="easyui-combogrid"  id="MineCodeS" style="width:150px" data-options="
			panelWidth: 240,
			idField: 'MineCode',
			textField: 'SimpleName',
			url: '../TransJson/TransJsonToTreeList?DataType=MineName&isDG=y',
			method: 'get',
			columns: [[
				{field:'MineCode',title:'煤矿编号',width:60,align:'center'},
				{field:'TmpID',title:'ID号',width:120,align:'center',hidden:true},
				{field:'SimpleName',title:'矿名',width:120,align:'center'},
				{field:'city',title:'归属城市',width:60,align:'center'},
			]], fitColumns: true,
		"></select>
           
        }
        @switch (PreLoadData)
        {
            case "RealData":
                 
                <span>    &nbsp;  &nbsp;  &nbsp;设备名：</span>
        <select class="easyui-combogrid" id="TypeCodeS" style="width:150px" data-options="
			panelWidth: 300,
			idField: 'TypeCode',
			textField: 'TypeName',
			url: '../TransJson/TransJsonToTreeList?DataType=DevType&isDG=y',
			method: 'get',
			columns: [[
				{field:'TypeCode',title:'设备编号',width:60,align:'center'},
				{field:'TypeName',title:'设备名',width:120,align:'center'},
				{field:'Unit',title:'单位',width:60,align:'center'},
				{field:'Type',title:'类型',width:60,align:'center'},
			]], fitColumns: true,
		"></select>
                <span>    &nbsp;  &nbsp;  &nbsp;测点编号：</span>
            <select class="easyui-combogrid" id="SensorNumS" style="width:150px" data-options="
			                    panelWidth: 350,
			                    idField: 'SensorNum',
			                    textField: 'Place',
			                    url: '../TransJson/TransJsonToTreeList?DataType=Sensor&isDG=y',
			                    method: 'get',
			                    columns: [[
				                    {field:'SensorNum',title:'测点编号',width:60,align:'center'},
				                    {field:'MineCode',title:'煤矿编号',width:10,align:'center',hidden:true},
				                    {field:'TypeName',title:'设备名',width:80,align:'center'},
				                    {field:'Place',title:'安装地点',width:100,align:'center'},
				                    {field:'Unit',title:'单位',width:60,align:'center'},
			                    ]], fitColumns: true,
		                    "></select>

                break;

        }
        <a href="javascript:void(0)" id="DGquery" class="easyui-linkbutton" data-options="iconCls:'icon-search'" onclick="DGquery()" style="width:80px">查询</a>

    </div>

    <script type="text/javascript">
        //根据时间，生成URl后缀，防止URL数据不刷新
        function getUrlStafix() {
            var myDate = new Date();
            return "&myDate=" + myDate.getFullYear() + myDate.getMonth() + myDate.getDate() + myDate.getHours() + myDate.getMinutes() + myDate.getSeconds();
        }
        

        var rows = 0;
      
    
        $(function () {

            //根据PreLoadData选择不同的 列
            var colunms = [];
            var hideThis = false;
            if ('@UserMineCode' == null || '@UserMineCode' == "")
            {
                hideThis = true;
            }
            
            switch ('@PreLoadData') {
                case "RealData":
                    if ('@PageSystemType' == 1) {
                        colunms.push({ field: "TmpID", title: "ID号", hidden: hideThis });
                        colunms.push({ field: "SimpleName", title: "煤矿名称", width: 200, hidden: hideThis });
                        colunms.push({ field: "SensorNum", title: "测点编号", width: 200 });
                        colunms.push({ field: "TypeName", title: "设备名", width: 200 });
                        colunms.push({ field: "Place", title: "安装地点", width: 200 });
                        colunms.push({ field: "ShowValue", title: "测点值", width: 200 });
                        colunms.push({ field: "Unit", title: "单位", width: 200 });
                        colunms.push({ field: "Datetime", title: "监测时间", width: 200 });
                        colunms.push({ field: "ValueState", title: "状态", width: 200 });
                    }
                    else {
                        colunms.push({ field: "TmpID", title: "ID号", hidden: true });
                        colunms.push({ field: "SimpleName", title: "煤矿名称", width: 200, hidden: hideThis });
                        colunms.push({ field: "SensorNum", title: "测点编号", width: 200 });
                        colunms.push({ field: "TypeName", title: "测点名称", width: 200 });
                        colunms.push({ field: "Place", title: "安装地点", width: 200 });
                        colunms.push({ field: "Unit", title: "单位", width: 200 });
                    }
                    break;
                case "AQBJ":


                    break;
            };
            //var myHeight = parseInt($("#myGrid")[0].style.height.replace("px", ""));
            rows = parseInt((@TotalHeight - 50) / 26);
            $("#dg").datagrid({
                pageSize: rows,
            });
            var grid = $('#dg');

            $("#dg").datagrid({
                fitColumns: true,
                columns: [colunms],
                toolbar: "#toolbar"
            });
            $("#dg").datagrid({
                title: "实时数据",
                pagination: true,
                autoRowHeight: false,
                pageList: [rows],
                url: "../TransJson/TransJsonToTreeList?DataType=RealData&isDG=y&rows=" + rows + getUrlStafix(),
                singleSelect: true,
                rownumbers: true,

            });
            var p = $("#dg").datagrid("getPager");
            p.pagination({
                showPageList: false,
                beforePageText: '第',//页数文本框前显示的汉字
                layout: ['first', 'prev', 'links', 'next', 'last', 'refresh', 'manual'],
                displayMsg: '当前显示 {from} - {to} 条记录   共 {total} 条记录',
                afterPageText: '页    共 {pages} 页',
            });

            timedCount();
        });
        var i=1;
        //自动刷新换页方法
        function timedCount() {
            var grid = $('#dg');
            var options = grid.datagrid('getPager').data("pagination").options;
            var curr = options.pageSize;
            var total = options.total;
            var count = Math.ceil(total / curr);
            if (i > count)
            { i = 1; }
            else i++


            $('#dg').datagrid('getPager').pagination('select', i);

            t = setTimeout("timedCount()", 10000)
        }
        //点击停止刷新时间
        function ClickReflesh(obj) {
            if (obj.checked) {
                clearTimeout(t);

            }
            else {
                timedCount()
            }
        }
        function DGquery()
        {
            var MineCode;
            var TypeCode;
            var SensorNum;
          var   url = "../TransJson/TransJsonToTreeList?isDG=y&DataType=" + '@PreLoadData';
            if ($("#MineCodeS").length > 0)
            {
                if ($("#MineCodeS").combogrid("grid").datagrid("getSelected") != null)

                {
                    MineCode = $("#MineCodeS").combogrid("grid").datagrid("getSelected").MineCode;
                    url += "&MineCode=" + MineCode;
                }
            }
            if ($("#TypeCodeS").length > 0)
            {
                if ($("#TypeCodeS").combogrid("grid").datagrid("getSelected") != null)
                {
                    TypeCode = $("#TypeCodeS").combogrid("grid").datagrid("getSelected").TypeCode;
                    url += "&SensorType=" + TypeCode;
                }
            }
            if ($("#SensorNumS").length > 0) {
                if ($("#SensorNumS").combogrid("grid").datagrid("getSelected") != null)
                {
                    SensorNum = $("#SensorNumS").combogrid("grid").datagrid("getSelected").SensorNum;
                    url += "&SensorNum=" + SensorNum;
                }
            }
            
            $("#dg").datagrid({
                url:url

            });
           
        }
    </script>
</body>
@*<script type="text/javascript">
 
    $(function () {

        var colunms=""
        switch('@PreLoadData')
        {
            case "RealData":
                colunms = "{field:'TmpID',title:'ID号',width:5,hidden:'true'}," +
                  "{field:'SimpleName',title:'煤矿名称',width:15}," +
                     "{field:'SensorNum',title:'测点编号',width:15}," +
                        "{field:'TypeName',title:'设备名',width:15}," +
                  "{field:'Place',title:'安装地点',width:15}," +
                   "{field:'ShowValue',title:'测点值',width:15}," +
                  "{field:'unit',title:'单位',width:15}," +
                  "{field:'datetime',title:'监测时间',width:15}," +
                  "{field:'ValueState',title:'状态',width:15},";
                break;
    
        }


        $('#dg').datagrid({
            pagination: true,
            autoRowHeight: false,
            rownumbers: true,
            pageList: 20,
        singleSelect: true, 
        url: "../TransJson/TransJsonToTreeList?DataType=RealData&isDG=y&rows=rows"  + getUrlStafix(),
            columns: colunms

        });
    });
    //是否启用自动刷新功能
    var isRefresh = 0;
    var count = 0;

    var mydata = 0;

    var systemType = 1;

    function OnReady(id)
    {
        systemType = '@SystemType';

        count++;
        if (count != 3) return;
        Title.func("Build", "../DataXML/Public/Public_Title.xml");
        Title.func("SetValue", "_title" + "\r\n" + '@PageTitle');
        Bar.func("build", '@QueryBarPath');//按指定路径加载QueryBar
        DataList.func("build", '@QueryDataPath');//按指定路径架构TreeList/Report
        if ('@PageType' != "Report") {
            DataList.func("OpenFreeformBar", "../DataXML/freeformpager2.xml \r\n bBar");//打开bBar
            DataList.func("SetProp", "IsRemoteSort \r\n true");//指定服务器端排序
            var h = DataList.func("GetHandle", "");//获取datalist句柄
            var hBbar = DataList.func("GetHandle", "bBar");//获取bBar句柄
            DataList.func(hBbar + "BindPager", h + "\r\n ID0");
            //var myHeight = parseInt($("#myGrid")[0].style.height.replace("px", ""));
            var myrows = ( @TotalHeight -50) / 26;
            var hBbar = DataList.func("GetHandle", "bBar");//获取bBar句柄
            DataList.func(hBbar + "SetObjectProp", "ID0\r\n pageRows  \r\n" + myrows); //让Treelist异步加载数据
            
        }
        //准备是否定时刷新，历史数据不用定时刷新
        isRefresh = getParameterByName("refresh");
        if (isRefresh == 1)
        {
            LoadData();
            DataList.func("bBar.timerRoundPage", "ID0 \r\n 10000");
        }
    }

    var times = 0;
    //启动定时器
   //window.setInterval("refreshData()", 10000);

    //根据参数名称，获取URL参数的值
    function getParameterByName(name)
    {
        var queryname = name.toLowerCase();
        var match = RegExp('[?&]' + queryname + '=([^&]*)')
            .exec(window.location.search.toLowerCase());
        return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
    }

    //根据时间，生成URl后缀，防止URL数据不刷新
    function getUrlStafix()
    {
        var myDate = new Date();
        return "&myDate=" + myDate.getFullYear() + myDate.getMonth() + myDate.getDate() + myDate.getHours() + myDate.getMinutes() + myDate.getSeconds();
    }

    ////刷新数据
    //function refreshData() {
    //    if (isRefresh == 1) {
    //        //if (times < 3) {
    //        //    times++;
    //        //}
    //        //else {
    //        //    times = 0;
    //        //}
    //        //if (isRefresh == 1 && times == 2) {
    //        //获取当前页码
    //        var currentPageIndex = DataList.func("bBar.ID0.GetCurrentPage", "");
    //        //指向下一页
    //        DataList.func("bBar.ID0.GotoPage", (parseInt(currentPageIndex) + 1));
    //        //}
    //        //else if (isRefresh == 1 && times < 2) {
    //        //    LoadData();
    //        //}
    //    }
    //}


    //硕正控件事件响应
    function OnEvent(id, Event, p1, p2, p3, p4)
    {
        if (id == "Bar") {
            if (Event == "EditChanged" && p1 == "StartTime" && '@PreLoadData' == "AQKGL_Week")
            {
                var StartDate = Bar.func("getText", "StartTime");
                var myStartDate = new Date(StartDate.replace(/-/g, '/'));
                var newDate = new Date(myStartDate.setDate(myStartDate.getDate() + 7));
                Bar.func("setText", "EndTime \r\n " + (newDate.getFullYear() + '-' + (newDate.getMonth() + 1) + '-' + newDate.getDate()));

            }
            else if(Event=="EditChanged" && p1=="MineName")//煤矿下拉框改变
            {
                var minecode = Bar.func("getValue", "MineName")

                RebindDropDownList(minecode);
            }
            else if (Event == "EditChanged" && p1 == "StopRefresh")//煤矿下拉框改变
            {
                //实时数据-是否停止刷新 添加于2015-9-15 申云飞
                var stopRefresh = Bar.func("getValue", "StopRefresh");
                if (stopRefresh == "1") {
                    DataList.func("bBar.timerRoundPage", "ID0 \r\n 0");
                } else {
                    DataList.func("bBar.timerRoundPage", "ID0 \r\n 10000");
                }

            }
            //查询
            else if (Event == "ButtonClicked" && p1 == "Query")
            {
                //DataList.func("bBar.ID0.GotoPage", 0);
                //获取页大小PageSize
                var pageSize = DataList.func("bBar.ID0.GetObjProp", "pageRows");
                //alert(pageSize);
                LoadData();
            }
        }
        //当硕正控件加载完成后
        if (p1=="Complete!")
        {
            var mine = getParameterByName("MineCode");
            if (mine == null || mine == "") {
                mine = Bar.func("getValue", "MineName");
            }
            RebindDropDownList(mine);
        }
    }

    $(document).ready(function (id) {

        var h = Bar.func("GetHandle", "SensorNum");
        var url = Bar.func(h + "getProp", "dataURL");
        LoadData();
    });

    //重新绑定下拉框,用于分矿显示和下拉框联动
    function RebindDropDownList(minecode)
    {
        if (systemType == 1)
        {
            var barControls = Bar.func("GetObjectIds", "");
            if (barControls.indexOf("SensorNum") >= 0) {
                var h = Bar.func("GetHandle", "SensorNum");
                var url = Bar.func(h + "getProp", "OriUrl");
                url = url + "&MineCode=" + minecode + getUrlStafix();
                Bar.func(h + "Load", url);
            }
        }
        else if (systemType == 2)
        {
            var barControls = Bar.func("GetObjectIds", "");
            if (barControls.indexOf("SensorNum") >= 0) {
                var h = Bar.func("GetHandle", "SensorNum");
                var url = Bar.func(h + "getProp", "OriUrl");
                url = url + "&MineCode=" + minecode + getUrlStafix();
                // Bar.func(h + "setProp", "dataURL\r\n" + url);
                Bar.func(h + "Load", url);
            }
            if (barControls.indexOf("DevType") >= 0) {
                var h = Bar.func("GetHandle", "DevType");
                var url = Bar.func(h + "getProp", "OriUrl");
                url = url + "&MineCode=" + minecode + getUrlStafix();
                // Bar.func(h + "setProp", "dataURL\r\n" + url);
                Bar.func(h + "Load", url);
            }
        }
    }
    var pageIndex = 0;
    var mydata = "";
    //加载数据
    function LoadData() {
        var date = new Date();
        var objectsName = Bar.func("getObjectIds", "Input");
        var arraryObjectName = objectsName.split(',', objectsName.split(',').length - 1);
        var tmp = "";
        $(arraryObjectName).each(function (id, item) {
            var varTemp = Bar.func("getValue", item);
            if (varTemp != "") {
                tmp += "&" + item + "=" + varTemp
            }
        });
        var mine = getParameterByName("MineCode");
        var systemType = getParameterByName("SystemType");
        if (mine == null || mine == "")
        {
            mine = Bar.func("getValue", "MineName");

        }
        
        var tmp = "&MineCode=" + mine;
        tmp = tmp + "&SystemType=" + systemType;
        tmp = tmp + "&SensorNum=" + Bar.func("getValue", "SensorNum");
        tmp = tmp + "&SensorType=" + Bar.func("getValue", "DevType");
        tmp = tmp + "&DropListType=" + escape(Bar.func("getValue", "DropListType"));
        tmp = tmp + "&Position=" + Bar.func("getValue", "Position");
        tmp = tmp + "&Name=" + Bar.func("getValue", "Name");
        tmp = tmp + "&TypeName=" + Bar.func("getValue", "TypeName");
        tmp = tmp + "&StartTime=" + Bar.func("getValue", "StartTime");
        tmp = tmp + "&EndTime=" + Bar.func("getText", "EndTime");
        tmp = tmp + "&Position=" + Bar.func("getValue", "Position");
        tmp = tmp + "&mydate=" + date.getFullYear() + date.getMonth() + date.getDate() + date.getHours() + date.getMinutes() + date.getSeconds();
        var urlq = "../TransJson/TransJsonToTreeList?DataType=" + '@PreLoadData' + tmp;
        urlq = urlq + "&autoPage=" + isRefresh;
        if ('@PageType' != "Report") {
            var pageSize = DataList.func("GetProp", "pageRows");
            urlq += "&startRow=@@startRow" + "&rows=@@rows";
            var forIndex = 0;
            var hBbar = DataList.func("GetHandle", "bBar");//获取bBar句柄
            DataList.func(hBbar + "SetObjectProp", "ID0\r\n dataURL  \r\n" + urlq + "\r\n mode=asynch"); //让Treelist异步加载数据

        }
        else {
            urlq = urlq + "&ReportName=" + '@ReportName';//郁森修改
            DataList.func("SetSource", "test\r\n" + urlq);
            DataList.func("calc", "mode=asynch;range=current");
        }
    }

    function clickme() {
        var mydate = new Date("");
    }

</script>*@


@*<body style="margin:5px 0 0 5px;padding:0 0 0 0;">
        <div style="height:30px">
            <script type="text/javascript">
                insertFreeForm('Title', '');
            </script>
        </div>
        <div style="height:30px">
            <script type="text/javascript">
                insertFreeForm('Bar', '');
            </script>
        </div>
        <div style="height:@TotalHeight;">
            <script type="text/javascript">
                if ('@PageType' != "Report") {
                    insertTreeList('DataList', '');
                }
                else {
                    insertReport('DataList', '');
                }
            </script>
        </div>
</body>*@

